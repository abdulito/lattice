basePath: /v1
definitions:
  rest.BuildRequest:
    properties:
      version:
        $ref: '#/definitions/v1.SystemVersion'
        type: object
    type: object
  rest.CreateSystemRequest:
    properties:
      definitionUrl:
        type: string
      id:
        $ref: '#/definitions/v1.SystemID'
        type: object
    type: object
  rest.DeployRequest:
    properties:
      buildId:
        $ref: '#/definitions/v1.BuildID'
        type: object
      version:
        $ref: '#/definitions/v1.SystemVersion'
        type: object
    type: object
  rest.RunJobRequest:
    properties:
      command:
        items:
          type: string
        type: array
      environment:
        type: string
      path:
        type: string
    type: object
  rest.SetSecretRequest:
    properties:
      value:
        type: string
    type: object
  v1.Build:
    properties:
      completionTimestamp:
        description: Completion timestamp
        type: string
      id:
        $ref: '#/definitions/v1.BuildID'
        description: ID
        type: object
      services:
        description: Services maps service paths (e.g. /foo/bar/buzz) to the status
          of the build for that service in the Build.
        type: object
      startTimestamp:
        description: Start timestamp
        type: string
      state:
        $ref: '#/definitions/v1.BuildState'
        description: State
        type: object
      version:
        $ref: '#/definitions/v1.SystemVersion'
        description: Version
        type: object
    type: object
  v1.BuildID:
    type: object
  v1.BuildState:
    type: object
  v1.Deploy:
    properties:
      buildId:
        $ref: '#/definitions/v1.BuildID'
        description: Build ID
        type: object
      id:
        $ref: '#/definitions/v1.DeployID'
        description: ID
        type: object
      state:
        $ref: '#/definitions/v1.DeployState'
        description: State
        type: object
    type: object
  v1.DeployID:
    type: object
  v1.DeployState:
    type: object
  v1.ErrorCode:
    type: object
  v1.ErrorResponse:
    properties:
      code:
        $ref: '#/definitions/v1.ErrorCode'
        type: object
      message:
        example: status bad request
        type: string
    type: object
  v1.Job:
    properties:
      completionTimestamp:
        description: CompletionTimestamp
        type: string
      id:
        $ref: '#/definitions/v1.JobID'
        description: ID
        type: object
      path:
        description: Path
        type: string
      startTimestamp:
        description: StartTimestamp
        type: string
      state:
        $ref: '#/definitions/v1.JobState'
        description: State
        type: object
    type: object
  v1.JobID:
    type: object
  v1.JobState:
    type: object
  v1.NodePool:
    properties:
      failure_info:
        $ref: '#/definitions/v1.NodePoolFailureInfo'
        description: FailureInfo
        type: object
      id:
        description: ID
        type: string
      instanceType:
        description: |-
          FIXME: how to deal with epochs?
          InstanceType
        type: string
      numInstances:
        description: NumInstances
        type: integer
      path:
        description: Path
        type: string
      state:
        $ref: '#/definitions/v1.NodePoolState'
        description: State
        type: object
    type: object
  v1.NodePoolFailureInfo:
    properties:
      message:
        description: Message
        type: string
      time:
        description: Time
        type: string
    type: object
  v1.NodePoolState:
    type: object
  v1.Result:
    type: object
  v1.Secret:
    properties:
      name:
        description: Name
        type: string
      path:
        description: Secret service path
        type: string
      value:
        description: Value
        type: string
    type: object
  v1.Service:
    properties:
      availableInstances:
        description: AvailableInstances
        type: integer
      failureInfo:
        $ref: '#/definitions/v1.ServiceFailureInfo'
        description: FailureInfo
        type: object
      id:
        $ref: '#/definitions/v1.ServiceID'
        description: Service ID
        type: object
      instances:
        description: Instances
        items:
          type: string
        type: array
      message:
        description: Message
        type: string
      path:
        description: Service Path
        type: string
      ports:
        description: Ports
        type: object
      staleInstances:
        description: StaleInstances
        type: integer
      state:
        $ref: '#/definitions/v1.ServiceState'
        description: State
        type: object
      terminatingInstances:
        description: TerminatingInstances
        type: integer
      updatedInstances:
        description: UpdatedInstances
        type: integer
    type: object
  v1.ServiceFailureInfo:
    properties:
      message:
        description: Message
        type: string
      time:
        description: Time
        type: string
    type: object
  v1.ServiceID:
    type: object
  v1.ServiceState:
    type: object
  v1.System:
    properties:
      definitionUrl:
        description: git url for for where the definition lives in
        type: string
      id:
        $ref: '#/definitions/v1.SystemID'
        description: System ID
        type: object
      services:
        description: map for service path and services currently running in the system
        type: object
      state:
        $ref: '#/definitions/v1.SystemState'
        description: State. One of "pending", "failed", "deleting", "stable", "degraded",
          "scaling", "updating"
        type: object
    type: object
  v1.SystemID:
    type: object
  v1.SystemState:
    type: object
  v1.SystemVersion:
    type: object
  v1.Teardown:
    properties:
      id:
        $ref: '#/definitions/v1.TeardownID'
        description: ID
        type: object
      state:
        $ref: '#/definitions/v1.TeardownState'
        description: State
        type: object
    type: object
  v1.TeardownID:
    type: object
  v1.TeardownState:
    type: object
host: localhost:8876
info:
  contact: {}
  description: This document describes the lattice API.
  license:
    name: Apache 2.0
  termsOfService: TBD
  title: Lattice API Docs
  version: "1.0"
paths:
  /systems:
    get:
      consumes:
      - application/json
      description: List systems
      operationId: list-systems
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.System'
            type: array
      summary: List systems
      tags:
      - systems
    post:
      consumes:
      - application/json
      description: Create a new system
      operationId: create-system
      parameters:
      - description: Create system
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/rest.CreateSystemRequest'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.System'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Create system
      tags:
      - systems
  /systems/{system}:
    delete:
      consumes:
      - application/json
      description: Delete system
      operationId: delete-system
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Result'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Delete system
      tags:
      - systems
    get:
      consumes:
      - application/json
      description: get system
      operationId: get-system
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.System'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Get system
      tags:
      - systems
  /systems/{system}/builds:
    get:
      consumes:
      - application/json
      description: list builds
      operationId: list-builds
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Build'
            type: array
      summary: Lists builds
      tags:
      - builds
    post:
      consumes:
      - application/json
      description: build system
      operationId: build-system
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: Create build
        in: body
        name: buildRequest
        required: true
        schema:
          $ref: '#/definitions/rest.BuildRequest'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Build'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Build system
      tags:
      - builds
  /systems/{system}/builds/{id}:
    get:
      consumes:
      - application/json
      description: get build
      operationId: get-build
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: Build ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Build'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Get build
      tags:
      - builds
  /systems/{system}/builds/{id}/logs:
    get:
      consumes:
      - application/json
      description: get logs
      operationId: get-build-logs
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: Build ID
        in: path
        name: id
        required: true
        type: string
      - description: Node Path
        in: query
        name: path
        required: true
        type: string
      - description: Sidecar
        in: query
        name: sidecar
        type: string
      - description: Follow
        in: query
        name: follow
        type: string
      - description: Previous
        in: query
        name: previous
        type: boolean
      - description: Timestamps
        in: query
        name: timestamps
        type: boolean
      - description: tail
        in: query
        name: tail
        type: integer
      - description: Since
        in: query
        name: since
        type: string
      - description: Since Time
        in: query
        name: sinceTime
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: log stream
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Get build logs
      tags:
      - builds
  /systems/{system}/deploys:
    get:
      consumes:
      - application/json
      description: list deploys
      operationId: list-deploys
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Deploy'
            type: array
      summary: Lists deploys
      tags:
      - deploys
    post:
      consumes:
      - application/json
      description: build system
      operationId: deploy-system
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: Create deploy
        in: body
        name: deployRequest
        required: true
        schema:
          $ref: '#/definitions/rest.DeployRequest'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Deploy'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Deploy system
      tags:
      - deploys
  /systems/{system}/deploys/{id}:
    get:
      consumes:
      - application/json
      description: get deploy
      operationId: get-deploy
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: Deploy ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Deploy'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Get deploy
      tags:
      - deploys
  /systems/{system}/jobs:
    get:
      consumes:
      - application/json
      description: list jobs
      operationId: list-jobs
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Job'
            type: array
      summary: Lists jobs
      tags:
      - jobs
  /systems/{system}/jobs/{id}:
    get:
      consumes:
      - application/json
      description: get job
      operationId: get-job
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Job'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Get job
      tags:
      - jobs
  /systems/{system}/jobs/{id}/logs:
    get:
      consumes:
      - application/json
      description: get job logs
      operationId: get-job-logs
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      - description: Sidecar
        in: query
        name: sidecar
        type: string
      - description: Follow
        in: query
        name: follow
        type: string
      - description: Previous
        in: query
        name: previous
        type: boolean
      - description: Timestamps
        in: query
        name: timestamps
        type: boolean
      - description: tail
        in: query
        name: tail
        type: integer
      - description: Since
        in: query
        name: since
        type: string
      - description: Since Time
        in: query
        name: sinceTime
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: log stream
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Get job logs
      tags:
      - jobs
  /systems/{system}/node-pools:
    get:
      consumes:
      - application/json
      description: list node pools
      operationId: list-node-pools
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.NodePool'
            type: array
      summary: Lists node pools
      tags:
      - node-pools
  /systems/{system}/node-pools/{id}:
    get:
      consumes:
      - application/json
      description: get node pool
      operationId: get-node-pool
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: NodePool ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.NodePool'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Get node pool
      tags:
      - node-pools
  /systems/{system}/secrets:
    get:
      consumes:
      - application/json
      description: list secrets
      operationId: list-secrets
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Secret'
            type: array
      summary: Lists secrets
      tags:
      - secrets
    post:
      consumes:
      - application/json
      description: set secret
      operationId: set-secret
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: Create secret
        in: body
        name: secretRequest
        required: true
        schema:
          $ref: '#/definitions/rest.SetSecretRequest'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Secret'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: set secret
      tags:
      - secrets
  /systems/{system}/secrets/{secret}:
    delete:
      consumes:
      - application/json
      description: get system
      operationId: delete-system
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: Secret Path
        in: path
        name: secret
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Result'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Delete system
      tags:
      - secrets
    get:
      consumes:
      - application/json
      description: get secret
      operationId: get-secret
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: Secret Path
        in: path
        name: secret
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Secret'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Get secret
      tags:
      - secrets
  /systems/{system}/services:
    get:
      consumes:
      - application/json
      description: list services
      operationId: list-services
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Service'
            type: array
      summary: Lists services
      tags:
      - services
  /systems/{system}/services/{id}:
    get:
      consumes:
      - application/json
      description: get service
      operationId: get-service
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: Service ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Service'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Get service
      tags:
      - services
  /systems/{system}/services/{id}/logs:
    get:
      consumes:
      - application/json
      description: get service logs
      operationId: get-service-logs
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: Service ID
        in: path
        name: id
        required: true
        type: string
      - description: Instance
        in: query
        name: instance
        required: true
        type: string
      - description: Sidecar
        in: query
        name: sidecar
        type: string
      - description: Follow
        in: query
        name: follow
        type: string
      - description: Previous
        in: query
        name: previous
        type: boolean
      - description: Timestamps
        in: query
        name: timestamps
        type: boolean
      - description: tail
        in: query
        name: tail
        type: integer
      - description: Since
        in: query
        name: since
        type: string
      - description: Since Time
        in: query
        name: sinceTime
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: log stream
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Get service logs
      tags:
      - services
  /systems/{system}/teardowns:
    get:
      consumes:
      - application/json
      description: list teardowns
      operationId: list-teardowns
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Teardown'
            type: array
      summary: Lists teardowns
      tags:
      - teardowns
    post:
      consumes:
      - application/json
      description: teardown system
      operationId: teardown-system
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Teardown'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Teardown system
      tags:
      - teardowns
  /systems/{system}/teardowns/{id}:
    get:
      consumes:
      - application/json
      description: get teardown
      operationId: get-teardown
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      - description: Teardown ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Teardown'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
            type: object
      summary: Get teardown
      tags:
      - teardowns
  /systems/{system}/versions:
    get:
      consumes:
      - application/json
      description: list teardowns
      operationId: list-system-versions
      parameters:
      - description: System ID
        in: path
        name: system
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.SystemVersion'
            type: array
      summary: Lists system versions
      tags:
      - versions
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: apiKey
    type: apiKey
swagger: "2.0"
