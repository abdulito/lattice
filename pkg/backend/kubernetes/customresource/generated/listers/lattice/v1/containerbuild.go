// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/mlab-lattice/lattice/pkg/backend/kubernetes/customresource/apis/lattice/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ContainerBuildLister helps list ContainerBuilds.
type ContainerBuildLister interface {
	// List lists all ContainerBuilds in the indexer.
	List(selector labels.Selector) (ret []*v1.ContainerBuild, err error)
	// ContainerBuilds returns an object that can list and get ContainerBuilds.
	ContainerBuilds(namespace string) ContainerBuildNamespaceLister
	ContainerBuildListerExpansion
}

// containerBuildLister implements the ContainerBuildLister interface.
type containerBuildLister struct {
	indexer cache.Indexer
}

// NewContainerBuildLister returns a new ContainerBuildLister.
func NewContainerBuildLister(indexer cache.Indexer) ContainerBuildLister {
	return &containerBuildLister{indexer: indexer}
}

// List lists all ContainerBuilds in the indexer.
func (s *containerBuildLister) List(selector labels.Selector) (ret []*v1.ContainerBuild, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ContainerBuild))
	})
	return ret, err
}

// ContainerBuilds returns an object that can list and get ContainerBuilds.
func (s *containerBuildLister) ContainerBuilds(namespace string) ContainerBuildNamespaceLister {
	return containerBuildNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ContainerBuildNamespaceLister helps list and get ContainerBuilds.
type ContainerBuildNamespaceLister interface {
	// List lists all ContainerBuilds in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.ContainerBuild, err error)
	// Get retrieves the ContainerBuild from the indexer for a given namespace and name.
	Get(name string) (*v1.ContainerBuild, error)
	ContainerBuildNamespaceListerExpansion
}

// containerBuildNamespaceLister implements the ContainerBuildNamespaceLister
// interface.
type containerBuildNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ContainerBuilds in the indexer for a given namespace.
func (s containerBuildNamespaceLister) List(selector labels.Selector) (ret []*v1.ContainerBuild, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ContainerBuild))
	})
	return ret, err
}

// Get retrieves the ContainerBuild from the indexer for a given namespace and name.
func (s containerBuildNamespaceLister) Get(name string) (*v1.ContainerBuild, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("containerbuild"), name)
	}
	return obj.(*v1.ContainerBuild), nil
}
