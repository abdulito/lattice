// This file was automatically generated by lister-gen

package v1

import (
	v1 "github.com/mlab-lattice/system/pkg/backend/kubernetes/customresource/apis/lattice/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SystemBuildLister helps list SystemBuilds.
type SystemBuildLister interface {
	// List lists all SystemBuilds in the indexer.
	List(selector labels.Selector) (ret []*v1.SystemBuild, err error)
	// SystemBuilds returns an object that can list and get SystemBuilds.
	SystemBuilds(namespace string) SystemBuildNamespaceLister
	SystemBuildListerExpansion
}

// systemBuildLister implements the SystemBuildLister interface.
type systemBuildLister struct {
	indexer cache.Indexer
}

// NewSystemBuildLister returns a new SystemBuildLister.
func NewSystemBuildLister(indexer cache.Indexer) SystemBuildLister {
	return &systemBuildLister{indexer: indexer}
}

// List lists all SystemBuilds in the indexer.
func (s *systemBuildLister) List(selector labels.Selector) (ret []*v1.SystemBuild, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SystemBuild))
	})
	return ret, err
}

// SystemBuilds returns an object that can list and get SystemBuilds.
func (s *systemBuildLister) SystemBuilds(namespace string) SystemBuildNamespaceLister {
	return systemBuildNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SystemBuildNamespaceLister helps list and get SystemBuilds.
type SystemBuildNamespaceLister interface {
	// List lists all SystemBuilds in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.SystemBuild, err error)
	// Get retrieves the SystemBuild from the indexer for a given namespace and name.
	Get(name string) (*v1.SystemBuild, error)
	SystemBuildNamespaceListerExpansion
}

// systemBuildNamespaceLister implements the SystemBuildNamespaceLister
// interface.
type systemBuildNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SystemBuilds in the indexer for a given namespace.
func (s systemBuildNamespaceLister) List(selector labels.Selector) (ret []*v1.SystemBuild, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SystemBuild))
	})
	return ret, err
}

// Get retrieves the SystemBuild from the indexer for a given namespace and name.
func (s systemBuildNamespaceLister) Get(name string) (*v1.SystemBuild, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("systembuild"), name)
	}
	return obj.(*v1.SystemBuild), nil
}
