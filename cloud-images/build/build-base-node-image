#!/usr/bin/env bash

set -o pipefail
set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

BUILD_STATE_DIR=${DIR}/../.state/build
mkdir -p ${BUILD_STATE_DIR}/artifacts/base-node

PACKER_OUTPUT_FILE=${BUILD_STATE_DIR}/.tmp_packer_output.log

if [[ -f ${BUILD_STATE_DIR}/artifacts/base-node-ami-id ]]; then
    echo "base-node image already built, skipping"
    exit
fi

cp -r ${DIR}/static_artifacts/base-node/* ${BUILD_STATE_DIR}/artifacts/base-node
${DIR}/scripts/base-node/local/generate-artifacts-1

cd ${BUILD_STATE_DIR}
cp ${DIR}/infrastructure.tf .

onexit() {
  rm -f ${PACKER_OUTPUT_FILE}
  cd ${BUILD_STATE_DIR}
  terraform destroy -force -var 'availability_zones=["us-east-1b", "us-east-1c", "us-east-1d", "us-east-1e"]'
}
trap onexit EXIT

terraform init
terraform apply -var 'availability_zones=["us-east-1b", "us-east-1c", "us-east-1d", "us-east-1e"]'

VPC_ID=$(terraform output | grep vpc_id | awk '{print $3}')
SUBNET_ID=$(terraform output | grep subnet_id | awk '{print $3}')

cd ${DIR}
packer build -machine-readable \
    -var "ami_name=lattice-kube-base-node-$(hostname)-$(date +%s)" \
    -var "vpc_id=${VPC_ID}" \
    -var "subnet_id=${SUBNET_ID}" \
    -var "source_ami=ami-a89d3ad2" \
    aws-base-node-image.json | tee ${PACKER_OUTPUT_FILE} | cut -d, -f 5

BASE_NODE_AMI_ID=$(grep -E -o 'ami-[a-f0-9]{8}' ${PACKER_OUTPUT_FILE} | tail -1)
echo ${BASE_NODE_AMI_ID} > ${BUILD_STATE_DIR}/artifacts/base-node-ami-id
