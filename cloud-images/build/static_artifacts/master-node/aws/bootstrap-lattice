#!/usr/bin/env bash

set -o pipefail
set -e

AVAILABILITY_ZONE=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
REGION=$(echo ${AVAILABILITY_ZONE} | sed 's/.$//')

USER_DATA=$(curl -s http://169.254.169.254/latest/user-data)
AWS_ACCOUNT_ID=$(echo ${USER_DATA} | jq '.lattice.aws_account_id' | tr -d '"')
VPC_ID=$(echo ${USER_DATA} | jq '.lattice.vpc_id' | tr -d '"')
SUBNET_IDS=$(echo ${USER_DATA} | jq '.lattice.subnet_ids' | tr -d '"')
MASTER_NODE_SECURITY_GROUP_ID=$(echo ${USER_DATA} | jq '.lattice.master_node_security_group_id' | tr -d '"')
BASE_NODE_AMI_ID=$(echo ${USER_DATA} | jq '.lattice.base_node_ami_id' | tr -d '"')
KEY_NAME=$(echo ${USER_DATA} | jq '.lattice.key_name' | tr -d '"')
STATE_S3_BUCKET=$(echo ${USER_DATA} | jq '.lattice.state_s3_bucket' | tr -d '"')
SYSTEM_ID=$(echo ${USER_DATA} | jq '.lattice.system_id' | tr -d '"')
SYSTEM_DEFINITION_URL=$(echo ${USER_DATA} | jq '.lattice.system_definition_url' | tr -d '"')

/usr/bin/docker run \
    --network host \
    -v /etc/opt/kubernetes/admin/kubeconfig:/etc/bootstrap-lattice/kubeconfig \
    gcr.io/lattice-dev/kevinrosendahl-debug-lattice-cli-admin:latest \
    kubernetes bootstrap \
    --kubeconfig /etc/bootstrap-lattice/kubeconfig \
    --initial-system-definition-url ${SYSTEM_DEFINITION_URL} \
    --lattice-controller-manager-image gcr.io/lattice-dev/kevinrosendahl-debug-kubernetes-lattice-controller-manager \
    --manager-api-image gcr.io/lattice-dev/kevinrosendahl-debug-kubernetes-manager-api-rest \
    --component-builder-image gcr.io/lattice-dev/kevinrosendahl-debug-kubernetes-component-builder \
    --component-build-docker-artifact-registry ${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com \
    --component-build-docker-artifact-repository component-builds \
    --component-builder-docker-api-version '1.24' \
    --cloud-provider AWS \
    --cloud-provider-var account-id=${AWS_ACCOUNT_ID} \
    --cloud-provider-var region=${REGION} \
    --cloud-provider-var vpc-id=${VPC_ID} \
    --cloud-provider-var subnet-ids=${SUBNET_IDS} \
    --cloud-provider-var master-node-security-group-id=${MASTER_NODE_SECURITY_GROUP_ID} \
    --cloud-provider-var base-node-ami-id=${BASE_NODE_AMI_ID} \
    --cloud-provider-var key-name=${KEY_NAME} \
    --service-mesh envoy \
    --service-mesh-var prepare-image=gcr.io/lattice-dev/kevinrosendahl-debug-envoy-prepare \
    --service-mesh-var xds-api-image=gcr.io/lattice-dev/kevinrosendahl-debug-kubernetes-envoy-xds-api-rest-per-node \
    --service-mesh-var redirect-cidr-block=172.16.0.0/16 \
    --networking-provider flannel \
    --networking-provider-var cidr-block=10.200.0.0/16 \
    --terraform-backend S3 \
    --terraform-backend-var bucket=${STATE_S3_BUCKET}
