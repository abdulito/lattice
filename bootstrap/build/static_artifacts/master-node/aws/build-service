#!/usr/bin/env bash

set -o pipefail
set -e

BUILD_ID=${1}
SERVICE_ID=${2}
BUILD_NODE_INSTANCE_TYPE="t2.small"

/opt/lattice/bin/master-provision-ecr-repository "lattice/kevin-mlab.local/systems/59941a9d1c38584734bd408f/${SERVICE_ID}"

/opt/lattice/bin/master-provision-build-node ${BUILD_ID} ${BUILD_NODE_INSTANCE_TYPE}

cat <<EOF | /opt/kubernetes/bin/kubectl create -f -
apiVersion: batch/v1
kind: Job
metadata:
  name: build-service-${BUILD_ID}
spec:
  template:
    metadata:
      name: build-service-${BUILD_ID}
    spec:
      hostNetwork: true
      dnsPolicy: Default
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: lattice/build
                operator: In
                values:
                  - ${BUILD_ID}
      tolerations:
      - key: "lattice/build"
        operator: "Equal"
        value: ${BUILD_ID}
        effect: "NoSchedule"
      - key: "lattice/build"
        operator: "Equal"
        value: ${BUILD_ID}
        effect: "NoExecute"
      containers:
      - name: build-service
        image: 473720580533.dkr.ecr.us-east-1.amazonaws.com/lattice/kevin-mlab.local/global/build/build-service
        env:
        - name: LATTICE_GIT_SSH_PUBLIC_KEY_PATH
          value: /etc/lattice-worker/build/build-ssh-key.pub
        - name: LATTICE_GIT_SSH_PRIVATE_KEY_PATH
          value: /etc/lattice-worker/build/build-ssh-key
        volumeMounts:
          - name: build-ssh-key
            mountPath: /etc/lattice-worker/build
            readOnly: true
          - name: docker-socket
            mountPath: /var/run/docker.sock
        command:
          - ./bin/lattice-worker
          - "{\"command\":\"build-service\",\"args\":{\"serviceBuild\":{\"repository\":{\"url\":\"ssh://git@github.com/kevindrosendahl/example__hello-world-service-chaining.git\",\"commit\":\"16d0ad5a7ef969b34174c39f12a588a38f4ff076\"},\"baseImage\":\"node:6.10\",\"buildCmd\":\"npm install\",\"port\":9999},\"destinations\":{\"ECR\":{\"registryId\":\"473720580533\",\"repository\":\"lattice/kevin-mlab.local/systems/59941a9d1c38584734bd408f/${SERVICE_ID}\",\"tag\":\"latest\"}}}}"
      restartPolicy: Never
      volumes:
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: build-ssh-key
        secret:
          secretName: build-ssh-key
          items:
          - key: private-key
            path: build-ssh-key
          - key: public-key
            path: build-ssh-key.pub
EOF

SUCCEEDED=0
while [[ "${SUCCEEDED}" -ne 1 ]]
do
  sleep 10
  echo "Checking for job success..."
  SUCCEEDED=$(/opt/kubernetes/bin/kubectl get job/build-service-${BUILD_ID} -o json \
              | jq '.status.succeeded' \
              | tr -d '"')
done

echo "Job succeeded!"

/opt/lattice/bin/master-deprovision-build-node ${BUILD_ID} ${BUILD_NODE_INSTANCE_TYPE}
